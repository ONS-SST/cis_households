from chispa import assert_df_equality

from cishouseholds.pipeline.merge_process import execute_and_resolve_flags_merge_specific_swabs

# SWABS
def test_swabs_merging(spark_session):  # noqa E302
    schema = "barcode string, any string"
    data = [
        ("ONS0001", None),
        ("ONS0002", None),
        ("ONS0003", None),
        ("ONS0003", None),
        ("ONS0003", None),
        ("ONS0004", None),
        ("ONS0004", None),
        ("ONS0004", None),
    ]
    df_input_survey = spark_session.createDataFrame(data, schema=schema).drop("any")

    schema = "barcode string, date_visit string, date_received string, pcr_result_recorded_datetime string,\
             pcr_result_classification string"
    data = [
        ("ONS0001", "2020-01-01", "2020-01-02", "2020-01-04 12:00:00:00", "positive"),
        ("ONS0002", "2020-01-02", "2020-01-03", "2020-01-04 12:00:00:00", "negative"),
        ("ONS0002", "2020-01-02", "2020-01-03", "2020-01-04 12:00:00:00", "negative"),
        ("ONS0002", "2020-01-02", "2020-01-03", "2020-01-04 12:00:00:00", "positive"),
        ("ONS0003", "2020-01-03", "2020-01-04", "2020-01-04 12:00:00:00", "positive"),
        ("ONS0004", "2020-01-04", "2020-01-05", "2020-01-04 12:00:00:00", "positive"),
        ("ONS0004", "2020-01-04", "2020-01-05", "2020-01-04 12:00:00:00", "positive"),
        ("ONS0004", "2020-01-04", "2020-01-05", "2020-01-04 12:00:00:00", "positive"),
    ]
    df_input_labs = spark_session.createDataFrame(data, schema=schema)

    schema = """
     barcode string,
    date_visit string,
    date_received string,
    pcr_result_recorded_datetime string,
    pcr_result_classification string,
    unique_id_voyager integer,
    count_barcode_voyager integer,
    unique_id_swab	integer,
    count_barcode_swab	integer,
    diff_vs_visit_hr double,
    out_of_date_range_swab	integer,
    abs_offset_diff_vs_visit_hr double,
    identify_one_to_many_swabs_flag integer,
    time_order_flag integer,
    pcr_flag integer,
    time_difference_flag integer,
    drop_flag_one_to_many_swabs	integer,
    identify_many_to_one_swab_flag integer,
    drop_flag_many_to_one_swabs	integer,
    identify_many_to_many_flag	integer,
    failed_flag_many_to_many_swabs integer,
    drop_flag_many_to_many_swabs integer,
    1_to_ms integer,
    m_to_1s integer,
    m_to_ms	integer,
    failed_one_to_many_swabs integer,
    failed_many_to_one_swabs integer,
    failed_many_to_many_swabs integer
    """
    data = [
        (
            "ONS0003",
            "2020-01-03",
            "2020-01-04",
            "2020-01-04 12:00:00",
            "positive",
            5,
            1,
            3,
            3,
            24.0,
            None,
            0.0,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
        ),
        (
            "ONS0003",
            "2020-01-03",
            "2020-01-04",
            "2020-01-04 12:00:00",
            "positive",
            5,
            1,
            4,
            3,
            24.0,
            None,
            0.0,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
        ),
        (
            "ONS0003",
            "2020-01-03",
            "2020-01-04",
            "2020-01-04 12:00:00",
            "positive",
            5,
            1,
            5,
            3,
            24.0,
            None,
            0.0,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            8,
            3,
            8,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            7,
            3,
            7,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            6,
            3,
            6,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            7,
            3,
            8,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            8,
            3,
            7,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            6,
            3,
            7,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            6,
            3,
            8,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            7,
            3,
            6,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0004",
            "2020-01-04",
            "2020-01-05",
            "2020-01-04 12:00:00",
            "positive",
            8,
            3,
            6,
            3,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            1,
            None,
            1,
            None,
            None,
            1,
            None,
            None,
            1,
        ),
        (
            "ONS0002",
            "2020-01-02",
            "2020-01-03",
            "2020-01-04 12:00:00",
            "negative",
            2,
            3,
            2,
            1,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            1,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            None,
            None,
            None,
        ),
        (
            "ONS0002",
            "2020-01-02",
            "2020-01-03",
            "2020-01-04 12:00:00",
            "negative",
            3,
            3,
            2,
            1,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            1,
            1,
            None,
            None,
            1,
            1,
            None,
            None,
            None,
            None,
            None,
        ),
        (
            "ONS0002",
            "2020-01-02",
            "2020-01-03",
            "2020-01-04 12:00:00",
            "positive",
            4,
            3,
            2,
            1,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            1,
            1,
            None,
            None,
            1,
            1,
            None,
            None,
            None,
            None,
            None,
        ),
        (
            "ONS0001",
            "2020-01-01",
            "2020-01-02",
            "2020-01-04 12:00:00",
            "positive",
            1,
            1,
            1,
            1,
            24.0,
            None,
            0.0,
            1,
            None,
            None,
            None,
            1,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ),
    ]
    expected_df = spark_session.createDataFrame(data, schema=schema)
    output_df = execute_and_resolve_flags_merge_specific_swabs(df_input_labs, df_input_survey, "date_visit")
    assert_df_equality(expected_df, output_df)
